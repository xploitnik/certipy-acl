Certipy ACL Tool — Setup & Usage Guide (Flat Version)

This tool silently binds to LDAP and parses Active Directory security descriptors (DACLs), decoding Access Control Entries (ACEs) for privilege escalation insights.

1. Clone the Repository
------------------------
git clone https://github.com/xploitnik/certipy-acl.git
cd certipy-acl

2. Create & Activate a Python Virtual Environment
-------------------------------------------------
We strongly recommend isolating your environment.

python3 -m venv certipy-acl-env
source certipy-acl-env/bin/activate

Then install the required dependencies:

pip install ldap3 impacket

pip install ldap3 impacket pyasn1 pyasn1-modules

3. Fix the Folder Structure (One-Time Setup)
--------------------------------------------
The Python files must live inside a `certipy_tool/` package folder.

mkdir certipy_tool
mv *.py certipy_tool/
touch certipy_tool/__init__.py

Final structure should now look like:

certipy-acl/
├── certipy_tool/
│   ├── auth.py
│   ├── parse_acl.py
│   ├── __main__.py
│   └── __init__.py
├── README.md
├── LICENSE

4. Navigate to the Correct Path Before Running
----------------------------------------------
cd /home/xpl0itnik/certipy/certipy-acl

5. Run the Tool
---------------
Show Help:
python3 -m certipy_tool acl
python3 -m certipy_tool acl --help

Example Usage (Certified HTB):
python3 -m certipy_tool acl \
  -u 'judith.mader@certified.htb' \
  -p 'judith09' \
  -target certified.htb \
  -dc-ip 10.129.231.186
 
 Global Usage
------------
python3 -m certipy_tool acl \
  -u '<user>@<domain>' \
  -p '<password>' \
  -target <fqdn or IP> \
  -dc-ip <domain controller IP>

This command binds to LDAP, retrieves security descriptors for directory objects, and decodes DACLs to reveal:
- WriteOwner
- WriteDACL
- GenericWrite
- GenericAll

Notes
-----
This tool is built for:
- Red teamers seeking silent enumeration
- CTF players avoiding noisy tools like BloodHound
- Researchers investigating shadow credentials or object takeovers

Created by @xploitnik — powered by `ldap3`, `impacket`, and a custom Certipy ACL module.

