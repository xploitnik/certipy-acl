Certipy ACL Tool â€” Setup & Usage Guide (Flat Version)

This tool silently binds to LDAP and parses Active Directory security descriptors (DACLs), decoding Access Control Entries (ACEs) for privilege escalation insights.

1. Clone the Repository

git clone https://github.com/xploitnik/certipy-acl.git
cd certipy-acl

2. Create & Activate a Python Virtual Environment

We strongly recommend isolating your environment.

python3 -m venv certipy-acl-env
source certipy-acl-env/bin/activate

Then install the required dependencies:

pip install ldap3 impacket pyasn1 pyasn1-modules

3. Fix the Folder Structure (One-Time Setup)

The Python files must live inside a certipy_tool/ package folder.

mkdir certipy_tool
mv *.py certipy_tool/
touch certipy_tool/__init__.py

Final structure should now look like:

certipy-acl/
â”œâ”€â”€ certipy_tool/
â”‚   â”œâ”€â”€ auth.py
â”‚   â”œâ”€â”€ parse_acl.py
â”‚   â”œâ”€â”€ __main__.py
â”‚   â””â”€â”€ __init__.py
â”œâ”€â”€ README.md
â”œâ”€â”€ LICENSE

4. Navigate to the Correct Path Before Running

cd /home/xpl0itnik/certipy/certipy-acl

5. Run the Tool

Show Help:

python3 -m certipy_tool 
python3 -m certipy_tool --help

Example Usage (Certified HTB):

python3 -m certipy_tool \
  -u 'judith.mader@certified.htb' \
  -p 'judith09' \
  -target certified.htb \
  -dc-ip 10.129.231.186

Global Usage

python3 -m certipy_tool \
  -u '<user>@<domain>' \
  -p '<password>' \
  -target <fqdn or IP> \
  -dc-ip <domain controller IP>

This command binds to LDAP, retrieves security descriptors for directory objects, and decodes DACLs to reveal:

WriteOwner

WriteDACL

GenericWrite

GenericAll

Optional Extensions & Filtering

You can extend the output control using the following flags:

--resolve-sids

Resolves raw SIDs into user- or group-readable names using LDAP lookups.

--filter-sid <SID>

Only shows ACEs that match this specific SID (e.g., your current user SID).

Example:

--filter-sid S-1-5-21-729746778-2675978091-3820388244-1103

--only-users

Only parses and displays ACEs related to user objects.

Useful if you want to ignore groups, computers, or other object classes.

ðŸ’¡ Recommendation:
If you're unsure whether your current user has control over groups or users:

Run once with --only-users

Run again without it â€” to catch group-level permissions (e.g., over "Management")

Notes

This tool is built for:

Red teamers seeking silent enumeration

CTF players avoiding noisy tools like BloodHound

Researchers investigating shadow credentials or object takeovers

Created by @xploitnik â€” powered by ldap3, impacket, and a custom Certipy ACL module.

